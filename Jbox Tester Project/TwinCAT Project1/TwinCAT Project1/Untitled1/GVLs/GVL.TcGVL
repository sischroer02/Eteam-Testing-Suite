<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <GVL Name="GVL" Id="{f15cefbf-3aef-482d-8180-da7d07eebc38}">
    <Declaration><![CDATA[{attribute 'qualified_only'}
VAR_GLOBAL
    SF1 AT%I* : BOOL; (* Mine Phone Continuity SF1 (1008 (2) port 8) *)
    SF2 AT%I* : BOOL; (* Mine Phone Continuity SF2 (1008 (2) port 7) *)
    SF6 AT%I* : BOOL; (* MGT Continuity SF6 (1008 (3) port 1) *)
	// SF7 AT%Q* : BOOL; (*0V Common Continuity SF7*)
    SF8 AT%I* : BOOL; (* MGT Continuity SF8 (1008 (3) port 2) *)
    SF4 AT%I* : BOOL; (* Fire pull Station SF4 (1008 (1) port 1) *)
    SF5 AT%Q* : BOOL; (* Fire Alarm Sound SF5 (2024 port 2) *)
    J1_1 AT%I* : BOOL; (* Lighting 24V Check J1 (1) (1008 (3) port 3) *)
    J1_2 AT%I* : BOOL; (* Lighting 24V Check J1 (2) (1008 (3) port 4) *)
    J2_1 AT%I* : BOOL; (* Lighting 24V Check J2 (1) (1008 (3) port 5) *)
    J2_2 AT%I* : BOOL; (* Lighting 24V Check J2 (2) (1008 (3) port 6) *)
    J3_1 AT%I* : BOOL; (* 24V PWR Check J3 (1) (1008 (1) port 4) *)
    J3_2 AT%I* : BOOL; (* 24V PWR Check J3 (2) (1008 (1) port 5) *)
    J4_1 AT%I* : BOOL; (* 24V PWR Check J4 (1) (1008 (1) port 6) *)
    J4_2 AT%I*: BOOL; (* 24V PWR Check J4 (2) (1008 (1) port 7) *)
    J5_1 AT%I* : BOOL; (* 24V PWR Check J5 (1) (1008 (2) port 1) *)
    J5_2 AT%I* : BOOL; (* 24V PWR Check J5 (2) (1008 (2) port 2) *)
    J6_1 AT%I* : BOOL; (* 24V PWR Check J6 (1) (1008 (2) port 3) *)
    J6_2 AT%I* : BOOL; (* 24V PWR Check J6 (2) (1008 (2) port 4) *)
    J7_4 AT%I* : BOOL; (* 24V PWR Check J7 (4) (1008 (1) port 2) *)
    J7_5 AT%I* : BOOL; (* 24V PWR Check J7 (5) (1008 (1) port 3) *)
    J8_4 AT%I*: BOOL; (* 24V PWR Check J8 (4) (1008 (2) port 5) *)
    J8_5 AT%I* : BOOL; (* 24V PWR Check J8 (5) (1008 (2) port 6) *)
    Door_Switch AT%I* : BOOL; (* Door Switch, Unknown Port *)
    Estop_Signal AT%I* : BOOL; (* Estop Signal, Unknown Port *)
    DCDC_Signal AT%I* : BOOL; (* DCDC Signal, Unknown Port *)
    Estop_Signal_Low AT%I* : BOOL; (* Estop Signal Low, Unknown Port *)
    DCDC_Signal_Low AT%I* : BOOL; (* DCDC Signal Low, Unknown Port *)
    DCDC_Calibration_Manual AT%I* : BOOL; (* DCDC Calibration Manual, Unknown Port *)
    DCDC_2_Signal AT%I* : BOOL; (* DCDC 2 Signal, Unknown Port *)
    DCDC_2_Signal_Low AT%I* : BOOL; (* DCDC 2 Signal Low, Unknown Port *)
    DCDC_2_Calibration_Manual AT%I* : BOOL; (* DCDC 2 Calibration Manual, Unknown Port *)
    PSU_1_Signal AT%I* : BOOL; (* PSU 1 Signal, Unknown Port *)
    PSU_1_Signal_Low AT%I* : BOOL; (* PS Low, Unknown Port *)
    PSU_2_Signal AT%I* : BOOL; (* PSU 2 Sigznal, Unknown Port *)
    PSU_2_Signal_Low AT%I* : BOOL; (* PSU 2 Signal Low, Unknown Port *)
    Hear_Fire_Alarm_Manual AT%I* : BOOL; (* Hear Fire Alarm Manual, Unknown Port *)
    Ping_address_1 AT%I* : BOOL; (* Ping address 1, Unknown Port *)
    Ping_address_2 AT%I* : BOOL; (* Ping address 2, Unknown Port *)
    Ping_address_3 AT%I* : BOOL; (* Ping address 3, Unknown Port *)
    Ping_address_4 AT%I* : BOOL; (* Ping address 4, Unknown Port *)
    grace_port_visible AT%I* : BOOL; (* grace port visible, Unknown Port *)
    indicator_120V_visible AT%I*: BOOL; (* 120V indicator visible, Unknown Port *)
    programmed_psu1_manual AT%I* : BOOL; (* programmed psu1 manual, Unknown Port *)
    programmed_psu2_manual AT%I* : BOOL; (* programmed psu2 manual, Unknown Port *)
    load_test_24V_psu1 AT%I* : BOOL; (* 24v load test psu1, Unknown Port *)
    load_test_24V_psu2 AT%I* : BOOL; (* 24v load test psu2, Unknown Port *)
    ecat_branch_test AT%I* : BOOL; (* ecat branch test, Unknown Port *)
    ecat_branch_test_2 AT%I* : BOOL; (* ecat branch test 2, Unknown Port *)
    mine_phone_battery_manual AT%I* : BOOL; (* mine phone battery manual, Unknown Port *)
    ping_ips AT%I* : BOOL; (* ping ips, Unknown Port *)
    gfci_test_manual AT%I* : BOOL; (* gfci test manual, Unknown Port *)	
	
	
	
	
	
	bStartTest  : BOOL := FALSE;  // user toggles to start
    bNextStep   : BOOL := FALSE;  // user toggles or clicks for next step
    bWriteLog   : BOOL := FALSE;  // user toggles to generate final log
    bTestDone   : BOOL := FALSE;  // set by the PLC when all sections done

    // Could also have states or instructions in a string
    sInstruction : STRING(80);    // text to display on HMI
END_VAR
	]]></Declaration>
  </GVL>
</TcPlcObject>